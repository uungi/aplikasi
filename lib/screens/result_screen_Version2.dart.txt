import 'package:flutter/material.dart';
import 'package:google_mobile_ads/google_mobile_ads.dart';
import 'package:provider/provider.dart';
import 'package:pdf/widgets.dart' as pw;
import 'package:printing/printing.dart';

import '../models/user_input.dart';
import '../services/ai_service.dart';
import '../utils/admob_helper.dart';
import '../providers/premium_provider.dart';
import 'premium_screen.dart';

class ResultScreen extends StatefulWidget {
  final UserInput input;
  const ResultScreen({super.key, required this.input});

  @override
  State<ResultScreen> createState() => _ResultScreenState();
}

class _ResultScreenState extends State<ResultScreen> {
  String? resume;
  String? coverLetter;
  bool loading = true;
  String? error;
  InterstitialAd? _interstitialAd;

  @override
  void initState() {
    super.initState();
    _showInterstitialAd();
    _generate();
  }

  Future<void> _showInterstitialAd() async {
    await InterstitialAd.load(
      adUnitId: AdmobHelper.interstitialAdUnitId,
      request: const AdRequest(),
      adLoadCallback: InterstitialAdLoadCallback(
        onAdLoaded: (ad) {
          _interstitialAd = ad..show();
        },
        onAdFailedToLoad: (error) {},
      ),
    );
  }

  Future<void> _generate() async {
    setState(() { loading = true; });
    final ai = AIService();
    try {
      final res = await ai.generateResume(widget.input);
      final cover = await ai.generateCoverLetter(widget.input);
      setState(() {
        resume = res;
        coverLetter = cover;
        loading = false;
      });
    } catch (e) {
      setState(() {
        error = "Gagal generate. Coba lagi.";
        loading = false;
      });
    }
  }

  Future<void> _downloadPDF(BuildContext context) async {
    final doc = pw.Document();
    doc.addPage(
      pw.MultiPage(
        build: (context) => [
          pw.Text('Resume', style: pw.TextStyle(fontSize: 20, fontWeight: pw.FontWeight.bold)),
          pw.SizedBox(height: 10),
          pw.Text(resume ?? ''),
          pw.SizedBox(height: 30),
          pw.Text('Surat Lamaran', style: pw.TextStyle(fontSize: 20, fontWeight: pw.FontWeight.bold)),
          pw.SizedBox(height: 10),
          pw.Text(coverLetter ?? ''),
        ],
      ),
    );
    await Printing.layoutPdf(onLayout: (format) => doc.save());
  }

  @override
  Widget build(BuildContext context) {
    final isPremium = context.watch<PremiumProvider>().isPremium;
    final watermark = "\n\n[WATERMARK: Upgrade ke premium untuk menghilangkan watermark & download PDF]";
    return Scaffold(
      appBar: AppBar(title: const Text("Hasil Generate")),
      body: loading
        ? const Center(child: CircularProgressIndicator())
        : error != null
          ? Center(child: Text(error!))
          : Padding(
              padding: const EdgeInsets.all(12.0),
              child: ListView(
                children: [
                  const Text("Resume:", style: TextStyle(fontWeight: FontWeight.bold)),
                  SelectableText(resume ?? "" + (!isPremium ? watermark : ""), style: const TextStyle(fontSize: 15)),
                  const SizedBox(height: 20),
                  const Text("Surat Lamaran:", style: TextStyle(fontWeight: FontWeight.bold)),
                  SelectableText(coverLetter ?? "" + (!isPremium ? watermark : ""), style: const TextStyle(fontSize: 15)),
                  const SizedBox(height: 30),
                  if (!isPremium)
                    ElevatedButton(
                      onPressed: () {
                        Navigator.push(context, MaterialPageRoute(builder: (_) => const PremiumScreen()));
                      },
                      child: const Text("Upgrade Premium & Download PDF"),
                    ),
                  if (isPremium)
                    ElevatedButton(
                      onPressed: () => _downloadPDF(context),
                      child: const Text("Download PDF"),
                    ),
                ],
              ),
            ),
    );
  }
}
